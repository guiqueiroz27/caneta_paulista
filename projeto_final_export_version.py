# -*- coding: utf-8 -*-

from bs4 import BeautifulSoup
import pandas as pd
import requests
import json
import os
import requests
import re
from urllib.parse import quote
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

gsheet_key= os.environ["gsheet_key"]
password_email= os.environ["password_email"]

"""# Função raspagem governo de SP"""

def leis_governo_sp(data_inicio, data_fim):
    cookies = {
        'OptanonConsent': 'isGpcEnabled=0&datestamp=Thu+Mar+14+2024+19%3A53%3A14+GMT-0300+(Hor%C3%A1rio+Padr%C3%A3o+de+Bras%C3%ADlia)&version=202302.1.0&isIABGlobal=false&hosts=&consentId=071ddc65-ae8a-499f-9d5c-72d6763c7a06&interactionCount=2&landingPath=NotLandingPage&groups=C0004%3A1%2CC0002%3A1%2CC0003%3A1%2CC0001%3A1&AwaitingReconsent=false&geolocation=BR%3BSP',
        'BNES_OptanonConsent': 'EOPlE11vU/5ALwLM40JTBCDbrWoyAhlXZ04BnaGTclCG7WAf57lIIQ6pHYAf3ZOsrZylAzgCHhko97ZSPFsCewhNLKkYa+NRGN22hTeoRXIl4PGxX6vjVN1LniYjYlAlbCjThV+oXdNRwuTZpXcZbgYQAGe7k4DXkOcUhoiTnCz/gD4usc8A31Bk6Ctz1QVr5kpIAMcIcrcZB6aGCyYvIPFmqF82OU2ct8/L0NwhsKTUhf2/2ejE7+fTtQsD7/KMP3uBE+DOIJnaQFyIWhevhk/87PiiY2a5rmznrQtHvw2grfT2PZRdu2L9yUS2rGsapCH6clOLo5AF4BU0Ji0OO3Y67mPYud+KRhYxNZ6zCHSOb47YYjHDBjEufo5k6DNghNt+ayNAY9fC0uOr5ZbmVRdNDdlZqQy+n5QGn3c2/aOVK4RhEuP9mMlwkuaEdzzv+vhDTSq6lD9BokXBeKe5q5AIFwMzRLjM3zCIiAsecYc+94Zn9jZPNeZBRAXHF9UGB6pj7AOBbyw=',
        'OptanonAlertBoxClosed': '2024-03-14T22:00:25.700Z',
        'BNES_OptanonAlertBoxClosed': 'NjpF4N986l1/+FBP3aDZUNv0WYuZbnvKc2as/bPaxMiN+XcqDY+8RNtYukXYYodz3BSFb2YdIjpi+Dr8hBUOWSi7kz4ZdWKc753Q+uQxT8g=',
    }

    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'Accept-Language': 'pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3',
        # 'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Referer': 'https://www.al.sp.gov.br/norma/resultados?page=0&size=5000&tipoPesquisa=E&buscaLivreEscape=&buscaLivreDecode=&_idsTipoNorma=1&idsTipoNorma=9&idsTipoNorma=2&idsTipoNorma=55&nuNorma=&ano=&complemento=&dtNormaInicio=01%2F03%2F2024&dtNormaFim=31%2F03%2F2024&idTipoSituacao=0&_idsTema=1&palavraChaveEscape=&palavraChaveDecode=&_idsAutorPropositura=1&_temQuestionamentos=on&_pesquisaAvancada=on&__ncforminfo=4QuqrVveTTltCJItU-3JindiSNXmeX3DpRChFwcscUPAVomOcnblZZurBETrm3i8b15ibeftA0pems9UhdCXddPB2JCtMTW-SqBfAmTVNhc%3D',
        # 'Cookie': 'OptanonConsent=isGpcEnabled=0&datestamp=Thu+Mar+14+2024+19%3A53%3A14+GMT-0300+(Hor%C3%A1rio+Padr%C3%A3o+de+Bras%C3%ADlia)&version=202302.1.0&isIABGlobal=false&hosts=&consentId=071ddc65-ae8a-499f-9d5c-72d6763c7a06&interactionCount=2&landingPath=NotLandingPage&groups=C0004%3A1%2CC0002%3A1%2CC0003%3A1%2CC0001%3A1&AwaitingReconsent=false&geolocation=BR%3BSP; BNES_OptanonConsent=EOPlE11vU/5ALwLM40JTBCDbrWoyAhlXZ04BnaGTclCG7WAf57lIIQ6pHYAf3ZOsrZylAzgCHhko97ZSPFsCewhNLKkYa+NRGN22hTeoRXIl4PGxX6vjVN1LniYjYlAlbCjThV+oXdNRwuTZpXcZbgYQAGe7k4DXkOcUhoiTnCz/gD4usc8A31Bk6Ctz1QVr5kpIAMcIcrcZB6aGCyYvIPFmqF82OU2ct8/L0NwhsKTUhf2/2ejE7+fTtQsD7/KMP3uBE+DOIJnaQFyIWhevhk/87PiiY2a5rmznrQtHvw2grfT2PZRdu2L9yUS2rGsapCH6clOLo5AF4BU0Ji0OO3Y67mPYud+KRhYxNZ6zCHSOb47YYjHDBjEufo5k6DNghNt+ayNAY9fC0uOr5ZbmVRdNDdlZqQy+n5QGn3c2/aOVK4RhEuP9mMlwkuaEdzzv+vhDTSq6lD9BokXBeKe5q5AIFwMzRLjM3zCIiAsecYc+94Zn9jZPNeZBRAXHF9UGB6pj7AOBbyw=; OptanonAlertBoxClosed=2024-03-14T22:00:25.700Z; BNES_OptanonAlertBoxClosed=NjpF4N986l1/+FBP3aDZUNv0WYuZbnvKc2as/bPaxMiN+XcqDY+8RNtYukXYYodz3BSFb2YdIjpi+Dr8hBUOWSi7kz4ZdWKc753Q+uQxT8g=',
        'Upgrade-Insecure-Requests': '1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'same-origin',
        'Sec-Fetch-User': '?1',
    }

    params = {
        'page': '0',
        'size': '5000',
        'tipoPesquisa': 'E',
        'buscaLivreEscape': '',
        'buscaLivreDecode': '',
        '_idsTipoNorma': '1',
        'idsTipoNorma': [
            '9',
            '2',
            '55',
        ],
        'nuNorma': '',
        'ano': '',
        'complemento': '',
        'dtNormaInicio': data_inicio,
        'dtNormaFim': data_fim,
        'idTipoSituacao': '0',
        '_idsTema': '1',
        'palavraChaveEscape': '',
        'palavraChaveDecode': '',
        '_idsAutorPropositura': '1',
        '_temQuestionamentos': 'on',
        '_pesquisaAvancada': 'on',
        '__ncforminfo': 'JYoCGELk0BvJLg9P_4v7WX0XtFPFNdyCfLpHZRtPb5KPsahU2IXV0saXb6tAHPeRjsuEMd6ajhlJcFv47y8f40MvrSA3Eiq1_uEoYEbvj6Rsq91tLpnwdbL0Jj7d7jD_0cPVyxSbmYIDYbBdsE8hnF-SuRLRceB5q-KI9eOJt7yfhznzK_OYdSVQ8CV3DB0f_I5mO2XCf6uX21pRUWIFzdsFlAGxtQ9O61UZcuAAu2jNDUKxkuBgReYDEDz517SRFc-gF8Q9PEQjuvu_gh_Hx3lF1PUXmWtRRjAg72hL4HyLv-ny2Xm3c6IRYpqIzGLt4Am_V5xMFUTVv6AKUsgEwNPRDdjmuVLd-Yowo81HYtVx0vn-69eFoEHE-LKIKoPjjBlwYnRVhTdcQOhDmBZF8pDThBvRxba7ik3izaYf1EJKOAfu_rTDXTk5-nWinN9CmgGuJ4UFkRHPTgO8uxWb6Mb53swgUI40jAjttZjr3ghxlYpIi8g37LRwG-SDlJyfVbk-m5ZxFHKReaEAMUiWduHzylyCvozRI7eO7FSz4Fjv7XR2evQE4EIa6fkY1_jyptbHTrXarnk1Sw78KUj-znDtFdbRNppKdVc8JS1VNjBfcH0rO31ggHob7eZbCDoJ3yhA81_RXtP8-w6-FicZQ8kKrQlnSJLqCDArZtOVWw_hcAloRXZI2ci0Vqrqpc3QeVtmzaqchlnjXQt7YN7GqclfygNx6QjGDnntM8HurDVwRcZ2AqWJCbomQ8NnSCCr',
    }

    response = requests.get('https://www.al.sp.gov.br/norma/resultados', params=params, cookies=cookies, headers=headers)

    html = BeautifulSoup(response.content, 'html.parser')

    html_leis = html.findAll('div', {'class': 'col-lg-9'}, 'html.parser')
    html_content = [str(item) for item in html_leis]


    html_str = ''.join(html_content)



    soup = BeautifulSoup(html_str, 'html.parser')

    leis_sancionadas = []
    rows = soup.find_all('tr')
    padrao_link = r'href="([^"]+)"'
    padrao_texto = r'<span>([^<]+)</span>'
    alesp_link = 'https://www.al.sp.gov.br'

    for row in rows:
        columns = row.find_all('td')
        if len(columns) == 2:
            link_tag = columns[0].find('a')
            if link_tag:
                link = link_tag['href']
                link = alesp_link + link

            lei_info_tag = columns[0].find('span')
            if lei_info_tag:
                lei_info = lei_info_tag.text.strip()
            else:
                lei_info = "Sem novas informações"

            description_tag = columns[1].find('span')
            if description_tag:
                description = description_tag.text.strip()
            else:
                description = "Não há descrição disponível"

            if "página." not in lei_info:
                leis_sancionadas.append(f"{lei_info.replace(' de', '')}, {link}, {description}")

    dados_divididos = [item.split(', ', maxsplit=3) for item in leis_sancionadas]

    df = pd.DataFrame(dados_divididos, columns=['LEI', 'DATA', 'LINK', 'DESCRIÇÃO'])

    return df

"""# Função raspagem prefeitura de SP"""

def leis_prefeitura_sp (data_inicio, data_fim):
  cookies = {
    'ARRAffinity': '7414571f2c5d9c0a92fc2d0464c240779a313627a990e4ed2f74b84bcd188c6b',
}

  headers = {
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0',
    'Accept': '*/*',
    'Accept-Language': 'pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3',
    # 'Accept-Encoding': 'gzip, deflate',
    'X-Requested-With': 'XMLHttpRequest',
    'X-MicrosoftAjax': 'Delta=true',
    'Cache-Control': 'no-cache',
    'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',
    'Origin': 'http://app-splegisreport-prd.azurewebsites.net',
    'Connection': 'keep-alive',
    'Referer': 'http://app-splegisreport-prd.azurewebsites.net/Report/VIEW_REL_PROJETOS_SANCIONADOS/List.aspx',
    # 'Cookie': 'ARRAffinity=7414571f2c5d9c0a92fc2d0464c240779a313627a990e4ed2f74b84bcd188c6b',
}

  data = {
    'ctl00$ScriptManager1': 'ctl00$ContentPlaceHolder1$UpdatePanel1|ctl00$ContentPlaceHolder1$ctl01$ctl01$ButtonIntervaloFiltrar',
    'ctl00$ContentPlaceHolder1$ctl01$ctl01$TextBoxIntervaloDataInicial': {data_inicio},
    'ctl00$ContentPlaceHolder1$ctl01$ctl01$TextBoxIntervaloDataFinal': {data_fim},
    'ctl00$ContentPlaceHolder1$ctl02$ctl01$DropDownList1': '',
    'ctl00$ContentPlaceHolder1$ctl03$ctl01$DropDownList1': '',
    'ctl00$ContentPlaceHolder1$ctl04$ctl01$DropDownList1': '',
    'ctl00$ContentPlaceHolder1$ctl05$ctl01$TextBox1': '',
    'ctl00$ContentPlaceHolder1$ctl06$ctl01$DropDownList1': '',
    '__EVENTTARGET': '',
    '__EVENTARGUMENT': '',
    '__LASTFOCUS': '',
    '__VIEWSTATE': '',
    '__VIEWSTATEGENERATOR': '6E3F7F38',
    '__VIEWSTATEENCRYPTED': '',
    '__ASYNCPOST': 'true',
    'ctl00$ContentPlaceHolder1$ctl01$ctl01$ButtonIntervaloFiltrar': 'Filtrar',
}

  response = requests.post(
    'http://app-splegisreport-prd.azurewebsites.net/Report/VIEW_REL_PROJETOS_SANCIONADOS/List.aspx',
    cookies=cookies,
    headers=headers,
    data=data,
)

  html = BeautifulSoup(response.content, 'html.parser')
  linhas = html.find_all('tr')

  data = []
  for linha in linhas:
    celulas = linha.find_all('td')
    data.append([celula.get_text(strip=True) for celula in celulas])

  df = pd.DataFrame(data)
  df = df.drop(df.index[0])
  df = df.rename(columns={0: 'Data'})
  df = df.rename(columns={1: 'Tipo'})
  df = df.rename(columns={2: 'Proponente'})
  df = df.rename(columns={3: 'Diploma legal'})
  df = df.rename(columns={4: 'Matéria legislativa'})
  df = df.rename(columns={5: 'Número'})
  df = df.rename(columns={6: 'Ano'})
  df = df.rename(columns={7: 'Ementa'})

  df['Link'] = ''

  nova_ordem = ['Diploma legal', 'Data', 'Link', 'Ementa', 'Matéria legislativa', 'Proponente']

  df = df[nova_ordem]

  df = df.rename(columns={'Diploma legal': 'Lei', 'Ementa': 'Descrição'})

  meses_pt = {
    'January': 'janeiro', 'February': 'fevereiro', 'March': 'marco',
    'April': 'abril', 'May': 'maio', 'June': 'junho', 'July': 'julho',
    'August': 'agosto', 'September': 'setembro', 'October': 'outubro',
    'November': 'novembro', 'December': 'dezembro'}

  def modificar_data(data_string):
    data = datetime.strptime(data_string, '%d/%m/%Y')
    mes_pt = meses_pt[data.strftime('%B')]
    return f"{data.day}-de-{mes_pt}-de-{data.year}"

# Aplicando a condição para criar o link apenas se 'Lei' tiver pelo menos cinco caracteres
  df.loc[df['Lei'].str.len() >= 5, 'Link'] = 'https://legislacao.prefeitura.sp.gov.br/leis/lei-' + df['Lei'] + '-de-' + df['Data'].apply(modificar_data)

  df.loc[df['Lei'].str.len() == 1, 'Lei'] = '-'

  def unificar_proponentes(group):
    if len(group) > 1 and group['Descrição'].nunique() == 1:
        return ', '.join(group['Proponente'])
    else:
        return group['Proponente'].iloc[0]

  proponentes_serie = df.groupby(['Lei', 'Descrição']).apply(unificar_proponentes)

  df['Proponente'] = df.set_index(['Lei', 'Descrição']).index.map(proponentes_serie)

  df = df.drop_duplicates(subset=['Lei', 'Descrição'])

  df = df.reset_index(drop=True)

  return df

"""# Função acessando e gravando dados novos GSheet"""

def atualizar_planilha(data_inicio='01/01/2024', planilha_key=gsheet_key, arquivo_credenciais="insperaa-f16b8130bed9.json"):
    # Obtenha a data atual
    data_fim = datetime.now().strftime('%d/%m/%Y')

    # Obtenha os DataFrames das leis sancionadas
    tabela_leis_prefeitura_sp = leis_prefeitura_sp(data_inicio, data_fim)
    tabela_leis_governo_sp = leis_governo_sp(data_inicio, data_fim)

    # Carregue as credenciais do Google Sheets
    conta = ServiceAccountCredentials.from_json_keyfile_name(arquivo_credenciais)
    api = gspread.authorize(conta)

    # Abra a planilha e as abas relevantes
    planilha = api.open_by_key(planilha_key)
    sheet_municipal = planilha.worksheet("municipal")
    sheet_estadual = planilha.worksheet("estadual")

    # Obtenha os dados atuais da planilha
    dados_municipais = sheet_municipal.get_all_values()
    dados_estaduais = sheet_estadual.get_all_values()

    # Converta os dados em DataFrames
    df_municipal = pd.DataFrame(dados_municipais[1:], columns=dados_municipais[0])
    df_estadual = pd.DataFrame(dados_estaduais[1:], columns=dados_estaduais[0])

    # Verifique se há dados novos
    novos_municipais = tabela_leis_prefeitura_sp[~tabela_leis_prefeitura_sp.isin(df_municipal)].dropna()
    novos_estaduais = tabela_leis_governo_sp[~tabela_leis_governo_sp.isin(df_estadual)].dropna()

    # Adicione apenas dados novos à planilha
    novos_adicionados_municipal = pd.DataFrame(columns=['Lei', 'Data', 'Link', 'Descrição', 'Matéria legislativa', 'Proponente'])
    novos_adicionados_estadual = pd.DataFrame(columns=['LEI', 'DATA', 'LINK', 'DESCRIÇÃO'])

    if not novos_municipais.empty:
        # Filtrar dados novos que não estão presentes no DataFrame da planilha
        novos_municipais = novos_municipais[~novos_municipais["Lei"].isin(df_municipal["Lei"])]
        if not novos_municipais.empty:
            # Adicionar dados novos à planilha
            sheet_municipal.append_rows(novos_municipais.values.tolist())
            novos_adicionados_municipal = novos_municipais.copy()

    if not novos_estaduais.empty:
        # Filtrar dados novos que não estão presentes no DataFrame da planilha
        novos_estaduais = novos_estaduais[~novos_estaduais["LEI"].isin(df_estadual["LEI"])]
        if not novos_estaduais.empty:
            # Adicionar dados novos à planilha
            sheet_estadual.append_rows(novos_estaduais.values.tolist())
            novos_adicionados_estadual = novos_estaduais.copy()

    # Transformar os DataFrames em tabelas HTML
    tabela_html_municipal = novos_adicionados_municipal.to_html(index=False)
    tabela_html_estadual = novos_adicionados_estadual.to_html(index=False)

    # Retorne as tabelas HTML separadamente
    return tabela_html_municipal, tabela_html_estadual

"""#Função para verificar se a tabela está vazia"""

def verificar_tabela_vazia(html):
  soup = BeautifulSoup(html, 'html.parser')
  return len(soup.find('tbody').find_all('td')) > 1

"""#Formatando e enviando o e-mail"""

data_fim = datetime.now().strftime('%d/%m/%Y')
smtp_server = "smtp-relay.brevo.com"
port = 587
email = "queirozguilherme05@gmail.com"  # MUDE AQUI
password = password_email  # MUDE AQUI

# Dados para o email que será enviado:
remetente = "queirozguilherme05@gmail.com"  # MUDE AQUI
destinatarios = ["queirozguilherme05@gmail.com", "isabela.moya@estadao.com", "thiagofelixlima@gmail.com"]  # MUDE AQUI
titulo = "Caneta paulista: novos projetos sancionados!"


# Chame a função atualizar_planilha() e receba as tabelas HTML
html_municipal, html_estadual = atualizar_planilha()

# Verifique se há dados para enviar por email
if html_municipal and verificar_tabela_vazia(html_municipal) or html_estadual and verificar_tabela_vazia(html_estadual):
  html = """<!DOCTYPE html>
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" lang="en">

<head>
	<title></title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0"><!--[if mso]><xml><o:OfficeDocumentSettings><o:PixelsPerInch>96</o:PixelsPerInch><o:AllowPNG/></o:OfficeDocumentSettings></xml><![endif]--><!--[if !mso]><!-->
	<link href="https://fonts.googleapis.com/css2?family=Fira+Sans:wght@100;200;300;400;500;600;700;800;900" rel="stylesheet" type="text/css"><!--<![endif]-->
	<style>
		* {
			box-sizing: border-box;
		}

		body {
			margin: 0;
			padding: 0;
		}

		a[x-apple-data-detectors] {
			color: inherit !important;
			text-decoration: inherit !important;
		}

		#MessageViewBody a {
			color: inherit;
			text-decoration: none;
		}

		p {
			line-height: inherit
		}

		.desktop_hide,
		.desktop_hide table {
			mso-hide: all;
			display: none;
			max-height: 0px;
			overflow: hidden;
		}

		.image_block img+div {
			display: none;
		}

		@media (max-width:705px) {
			.desktop_hide table.icons-inner {
				display: inline-block !important;
			}

			.icons-inner {
				text-align: center;
			}

			.icons-inner td {
				margin: 0 auto;
			}

			.mobile_hide {
				display: none;
			}

			.row-content {
				width: 100% !important;
			}

			.stack .column {
				width: 100%;
				display: block;
			}

			.mobile_hide {
				min-height: 0;
				max-height: 0;
				max-width: 0;
				overflow: hidden;
				font-size: 0px;
			}

			.desktop_hide,
			.desktop_hide table {
				display: table !important;
				max-height: none !important;
			}

			.row-1 .column-1 .block-2.heading_block h1 {
				font-size: 31px !important;
			}

			.row-2 .column-1 .block-1.paragraph_block td.pad>div {
				text-align: justify !important;
				font-size: 12px !important;
			}
		}
	</style>
</head>

<body style="background-color: #000000; margin: 0; padding: 0; -webkit-text-size-adjust: none; text-size-adjust: none;">
	<table class="nl-container" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #000000;">
		<tbody>
			<tr>
				<td>
					<table class="row row-1" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff;">
						<tbody>
							<tr>
								<td>
									<table class="row-content stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; color: #000000; width: 685px; margin: 0 auto;" width="685">
										<tbody>
											<tr>
												<td class="column column-1" width="100%" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; font-weight: 400; text-align: left; padding-top: 5px; vertical-align: top; border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px;">
													<div class="spacer_block block-1" style="height:25px;line-height:25px;font-size:1px;">&#8202;</div>
													<table class="heading_block block-2" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad">
																<h1 style="margin: 0; color: #000000; direction: ltr; font-family: 'Fira Sans', 'Lucida Sans Unicode', 'Lucida Grande', sans-serif; font-size: 41px; font-weight: 500; letter-spacing: normal; line-height: 120%; text-align: center; margin-top: 0; margin-bottom: 0; mso-line-height-alt: 49.199999999999996px;"><span class="tinyMce-placeholder">Caneta paulista, {data_fim}<br></span></h1>
															</td>
														</tr>
													</table>
													<table class="paragraph_block block-3" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; word-break: break-word;">
														<tr>
															<td class="pad">
																<div style="color:#000000;direction:ltr;font-family:Arial, Helvetica, sans-serif;font-size:15px;font-weight:400;letter-spacing:0px;line-height:120%;text-align:center;mso-line-height-alt:18px;">
																	<p style="margin: 0;">De olho nas leis que são sancionadas pelo poder Executivo da cidade e do estado de São Paulo</p>
																</div>
															</td>
														</tr>
													</table>
													<div class="spacer_block block-4" style="height:15px;line-height:15px;font-size:1px;">&#8202;</div>
													<table class="image_block block-5" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad" style="width:100%;">
																<div class="alignment" align="center" style="line-height:10px">
																	<div style="max-width: 685px;"><img src="https://6cdfc3020c.imgdist.com/pub/bfra/8lwdx23k/p8x/8w4/5wn/6a5e2974-54a9-413a-9a1c-eb30d3203b34.jpg" style="display: block; height: auto; border: 0; width: 100%;" width="685" alt="Ramadana" title="Ramadana"></div>
																</div>
															</td>
														</tr>
													</table>
												</td>
											</tr>
										</tbody>
									</table>
								</td>
							</tr>
						</tbody>
					</table>
					<table class="row row-2" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff;">
						<tbody>
							<tr>
								<td>
									<table class="row-content stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; border-radius: 0; color: #000000; width: 685px; margin: 0 auto;" width="685">
										<tbody>
											<tr>
												<td class="column column-1" width="100%" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; font-weight: 400; text-align: left; padding-bottom: 5px; padding-top: 5px; vertical-align: top; border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px;">
													<table class="paragraph_block block-1" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; word-break: break-word;">
														<tr>
															<td class="pad">
																<div style="color:#000000;direction:ltr;font-family:Arial, Helvetica, sans-serif;font-size:16px;font-weight:400;letter-spacing:0px;line-height:120%;text-align:left;mso-line-height-alt:19.2px;">
																	<p style="margin: 0; margin-bottom: 11px;"><em>Projeto elaborado por <a href="https://www.linkedin.com/in/guilherme-queiroz-26178914b/" target="_blank" style="text-decoration: underline; color: #7747ff;" rel="noopener">Guilherme Queiroz</a>&nbsp;</em></p>
																	<p style="margin: 0;">Do forno! Confira abaixo os textos que foram sancionados pelo poder municipal da capital e pelo governo estadual</p>
																</div>
															</td>
														</tr>
													</table>
													<table class="heading_block block-2" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad">
																<h1 style="margin: 0; color: #000000; direction: ltr; font-family: Arial, Helvetica, sans-serif; font-size: 38px; font-weight: 700; letter-spacing: normal; line-height: 120%; text-align: left; margin-top: 0; margin-bottom: 0; mso-line-height-alt: 45.6px;"><span class="tinyMce-placeholder">Município</span></h1>
															</td>
														</tr>
													</table>
													<table class="image_block block-3" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad" style="width:100%;">
																<div class="alignment" align="center" style="line-height:10px">
																	<div style="max-width: 577px;"><img src="https://6cdfc3020c.imgdist.com/pub/bfra/8lwdx23k/14q/cat/s67/prefeitura.jpg" style="display: block; height: auto; border: 0; width: 100%;" width="577"></div>
																</div>
															</td>
														</tr>
													</table>
												</td>
											</tr>
										</tbody>
									</table>
								</td>
							</tr>
						</tbody>
					</table>
					<table class="row row-3" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff; background-size: auto;">
						<tbody>
							<tr>
								<td>
									<table class="row-content stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-size: auto; background-color: #ffffff; border-radius: 0; color: #000000; width: 685px; margin: 0 auto;" width="685">
										<tbody>
											{{html_municipal}}
										</tbody>
									</table>
								</td>
							</tr>
						</tbody>
					</table>
					<table class="row row-4" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff;">
						<tbody>
							<tr>
								<td>
									<table class="row-content stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff; border-radius: 0; color: #000000; width: 685px; margin: 0 auto;" width="685">
										<tbody>
											<tr>
												<td class="column column-1" width="100%" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; font-weight: 400; text-align: left; padding-bottom: 5px; padding-top: 5px; vertical-align: top; border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px;">
													<table class="heading_block block-1" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad">
																<h1 style="margin: 0; color: #000000; direction: ltr; font-family: Arial, Helvetica, sans-serif; font-size: 38px; font-weight: 700; letter-spacing: normal; line-height: 120%; text-align: left; margin-top: 0; margin-bottom: 0; mso-line-height-alt: 45.6px;"><span class="tinyMce-placeholder">Estado</span></h1>
															</td>
														</tr>
													</table>
													<table class="image_block block-2" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad" style="width:100%;">
																<div class="alignment" align="center" style="line-height:10px">
																	<div style="max-width: 685px;"><img src="https://6cdfc3020c.imgdist.com/pub/bfra/8lwdx23k/hlm/qqp/uor/governo%20sp.jpg" style="display: block; height: auto; border: 0; width: 100%;" width="685"></div>
																</div>
															</td>
														</tr>
													</table>
                          {{html_estadual}}
													<div class="spacer_block block-4" style="height:40px;line-height:40px;font-size:1px;">&#8202;</div>
													<table class="paragraph_block block-5" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; word-break: break-word;">
														<tr>
															<td class="pad">
																<div style="color:#101112;direction:ltr;font-family:Arial, Helvetica, sans-serif;font-size:16px;font-weight:400;letter-spacing:0px;line-height:120%;text-align:center;mso-line-height-alt:19.2px;">
                                                                  <a href="https://docs.google.com/spreadsheets/d/1Y6BvtI4YRyrFiPvImywDCf0AAmbq4hF72xI41F88lJ8/edit#gid=1056041825">
    Acesse aqui a base de dados com todas as leis sancionadas em 2024.
</a>
 <br><br/>
																	<p style="margin: 0; margin-bottom: 16px;"><em>Caneta paulista é um projeto parte do trabalho final da pós-graduação em Jornalismo de Dados, Automação e Data Storytelling do Insper</em></p>
																	<p style="margin: 0;">Dúvidas? Me contate em queirozguilherme05@gmail.com</p>

																</div>
															</td>
														</tr>
													</table>
												</td>
											</tr>
										</tbody>
									</table>
								</td>
							</tr>
						</tbody>
					</table>
					<table class="row row-5" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff;">
						<tbody>
							<tr>
								<td>
									<table class="row-content stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; background-color: #ffffff; color: #000000; width: 685px; margin: 0 auto;" width="685">
										<tbody>
											<tr>
												<td class="column column-1" width="100%" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; font-weight: 400; text-align: left; padding-bottom: 5px; padding-top: 5px; vertical-align: top; border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px;">
													<table class="icons_block block-1" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
														<tr>
															<td class="pad" style="vertical-align: middle; color: #1e0e4b; font-family: 'Inter', sans-serif; font-size: 15px; padding-bottom: 5px; padding-top: 5px; text-align: center;">
																<table width="100%" cellpadding="0" cellspacing="0" role="presentation" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt;">
																	<tr>
																		<td class="alignment" style="vertical-align: middle; text-align: center;"><!--[if vml]><table align="center" cellpadding="0" cellspacing="0" role="presentation" style="display:inline-block;padding-left:0px;padding-right:0px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;"><![endif]-->
																			<!--[if !vml]><!-->
																			<table class="icons-inner" style="mso-table-lspace: 0pt; mso-table-rspace: 0pt; display: inline-block; margin-right: -4px; padding-left: 0px; padding-right: 0px;" cellpadding="0" cellspacing="0" role="presentation"><!--<![endif]-->
																				<tr>
																					<td style="vertical-align: middle; text-align: center; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 6px;"><a href="http://designedwithbeefree.com/" target="_blank" style="text-decoration: none;"><img class="icon" alt="Beefree Logo" src="https://d1oco4z2z1fhwp.cloudfront.net/assets/Beefree-logo.png" height="32" width="34" align="center" style="display: block; height: auto; margin: 0 auto; border: 0;"></a></td>
																					<td style="font-family: 'Inter', sans-serif; font-size: 15px; font-weight: undefined; color: #1e0e4b; vertical-align: middle; letter-spacing: undefined; text-align: center;"><a href="http://designedwithbeefree.com/" target="_blank" style="color: #1e0e4b; text-decoration: none;">Designed with Beefree</a></td>
																				</tr>
																			</table>
																		</td>
																	</tr>
																</table>
															</td>
														</tr>
													</table>
												</td>
											</tr>
										</tbody>
									</table>
								</td>
							</tr>
						</tbody>
					</table>
				</td>
			</tr>
		</tbody>
	</table><!-- End -->
</body>

</html>
"""
  # Se houver dados municipais, adicione-os ao email
  html = html.replace("{{html_municipal}}", html_municipal)
  html= html.replace("{data_fim}", data_fim)


# Se houver dados estaduais, adicione-os ao email
  html = html.replace("{{html_estadual}}", html_estadual)


    # Iniciando conexão com o servidor:
  server = smtplib.SMTP(smtp_server, port)  # Inicia a conexão com o servidor
  server.starttls()  # Altera a comunicação para utilizar criptografia
  server.login(email, password)  # Autentica

    # Preparando o objeto da mensagem ("documento" do email):
  mensagem = MIMEMultipart()
  mensagem["From"] = remetente
  mensagem["To"] = ",".join(destinatarios)
  mensagem["Subject"] = titulo
  conteudo_html = MIMEText(html, "html")  # Adiciona a versão em HTML
  mensagem.attach(conteudo_html)

    # Enviando o email pela conexão já estabelecida:
  server.sendmail(remetente, destinatarios, mensagem.as_string())
  print("E-mail enviado com sucesso!")
else:
  print("Não há novos dados para enviar por e-mail")
